// bootstrap
@256
D=A
@SP
M=D
// call Sys.init 0
@RETURNbootstrap
D=A
@SP
A=M
M=D
 // push return-address
@SP
M=M+1
@LCL
D=M
@SP
A=M
M=D // push LCL
@SP
M=M+1
@ARG
D=M
@SP
A=M
M=D // push ARG
@SP
M=M+1
@THIS
D=M
@SP
A=M
M=D // push THIS
@SP
M=M+1
@THAT
D=M
@SP
A=M
M=D // push THAT
@SP
M=M+1
D=M
@0
D=D-A
@5
D=D-A
@ARG
M=D // ARG = SP-n-5
@SP
D=M
@LCL
M=D // LCL = SP
@Sys.init
0;JMP // goto Sys.init
(RETURNbootstrap)
(Main.fibonacci)
@0
D=A
@ARG
A=M+D
D=M
@SP
A=M
M=D
@SP
M=M+1
@2
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP
AM=M-1
D=M
@SP
A=M-1
D=M-D
M=-1
@ALabel_Main0
D;JLT
@SP
A=M-1
M=0
(ALabel_Main0)
@SP
AM=M-1
D=M
@IF_TRUE
D;JNE
@IF_FALSE
0;JMP
(IF_TRUE)
@0
D=A
@ARG
A=M+D
D=M
@SP
A=M
M=D
@SP
M=M+1
@LCL
D=M
@R15
M=D
@5
A=D-A
D=M
@R14
M=D
@SP
AM=M-1
D=M
@ARG
A=M
M=D
@ARG
D=M+1
@SP
M=D
@R15
D=M-1
AM=D
D=M
@THAT
M=D
@R15
D=M-1
AM=D
D=M
@THIS
M=D
@R15
D=M-1
AM=D
D=M
@ARG
M=D
@R15
D=M-1
AM=D
D=M
@LCL
M=D
@R14
A=M
0;JMP
(IF_FALSE)
@0
D=A
@ARG
A=M+D
D=M
@SP
A=M
M=D
@SP
M=M+1
@2
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP
AM=M-1
D=M
@SP
A=M-1
M=M-D
@Main.fibonacci1$RETURN
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP
D=M
@5
D=D-A
@1
D=D-A
@ARG
M=D
@SP
D=M
@LCL
M=D
@Main.fibonacci
0;JMP
(Main.fibonacci1$RETURN)
@0
D=A
@ARG
A=M+D
D=M
@SP
A=M
M=D
@SP
M=M+1
@1
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP
AM=M-1
D=M
@SP
A=M-1
M=M-D
@Main.fibonacci2$RETURN
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP
D=M
@5
D=D-A
@1
D=D-A
@ARG
M=D
@SP
D=M
@LCL
M=D
@Main.fibonacci
0;JMP
(Main.fibonacci2$RETURN)
@SP
AM=M-1
D=M
@SP
A=M-1
M=M+D
@LCL
D=M
@R15
M=D
@5
A=D-A
D=M
@R14
M=D
@SP
AM=M-1
D=M
@ARG
A=M
M=D
@ARG
D=M+1
@SP
M=D
@R15
D=M-1
AM=D
D=M
@THAT
M=D
@R15
D=M-1
AM=D
D=M
@THIS
M=D
@R15
D=M-1
AM=D
D=M
@ARG
M=D
@R15
D=M-1
AM=D
D=M
@LCL
M=D
@R14
A=M
0;JMP
(Sys.init)
@4
D=A
@SP
A=M
M=D
@SP
M=M+1
@Main.fibonacci3$RETURN
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP
D=M
@5
D=D-A
@1
D=D-A
@ARG
M=D
@SP
D=M
@LCL
M=D
@Main.fibonacci
0;JMP
(Main.fibonacci3$RETURN)
(WHILE)
@WHILE
0;JMP
